/**
 * Represents a physical location
 */
/datum/lore/location
	abstract_type = /datum/lore/location
	// much like atom.contents, locations have a "contains a" relationship with mandatory non-looping
	/// contained in this other location - set this manually to an id/typepath. if null, this is a root object.
	var/datum/lore/location/loc
	/// contains these other locations - automatically set
	var/datum/lore/location/contents
	/// faction presence - defined on the datum, not autogenerated. only makes sense for some things (e.g. you wouldn't have multiple factions in a single building)
	var/list/datum/lore/faction/faction_presence = list()

/datum/lore/location/Destroy()
	// orphan contents first
	for(var/datum/lore/location/L in contents)
		if(L.loc == src)
			L.loc = null
	contents.Cut()
	PlaceInto(null)
	return ..()

/datum/lore/location/Generate()
	. = ..()
	var/datum/lore/location/_loc = GetInitialLocation()
	PlaceInto(_loc)

/datum/lore/location/proc/GetInitialLocation()
	RETURN_TYPE(/datum/lore/location)
	var/datum/lore/location/_loc = istype(loc)? loc : SSloremaster.Fetch(loc)
	if(!_loc)
		stack_trace("Invalid starting loc [loc] on [type].")
		return
	return _loc

/datum/lore/location/proc/PlaceInto(datum/lore/location/container)
	if(loc)
		if(istype(loc))
			loc.contents -= src
		loc = null
	if(!istype(container))
		return
	LAZYADD(container.contents, src)
	loc = container

/**
 * Returns /datum/typed_scalar, or null if unknown
 */
/datum/lore/location/proc/DistanceTo(datum/lore/location/other)
	return null	// currently unimplemented

/**
 * Gets distance as text
 */
/datum/lore/location/proc/DistanceToText(datum/lore/location/other)
	var/datum/typed_scalar = DistanceTo(other)
	if(typed_scalar)
		return typed_scalar.Render()
	return "unknown"

/**
 * Gets all locations in this one
 */
/datum/lore/location/proc/GetAllContents(include_self = TRUE)
	. = list()
	var/list/processing = list(src)
	while(processing.len)
		var/datum/lore/location/L = processing[processing.len--]
		if(!istype(L))
			continue
		if(L in .)
			CRASH("Loop found: [english_list(.)].")
		. += L
		processing += L.contents
	if(!include_self)
		. -= src

/**
 * Gets the faction datum that owns this place, if applicable
 */
/datum/lore/location/proc/GetOwnerFaction()
	RETURN_TYPE(/datum/lore/faction)

/**
 * Gets the name of who/what owns us
 */
/datum/lore/locastion/proc/GetOwnerName()
	return "Unknown"
